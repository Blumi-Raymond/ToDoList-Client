{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\p3\\\\ToDoListReact-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  // async function createTodo(e) {\n  //   e.preventDefault();\n  //   await service.addTask(newTodo);\n  //   setNewTodo(\"\");//clear input\n  //   await getTodos();//refresh tasks list (in order to see the new one)\n  // }\n\n  // async function updateCompleted(todo, isComplete) {\n  //   await service.setCompleted(todo.id, isComplete);\n  //   await getTodos();//refresh tasks list (in order to see the updated one)\n  // }\n\n  // async function deleteTodo(id) {\n  //   await service.deleteTask(id);\n  //   await getTodos();//refresh tasks list\n  // }\n\n  useEffect(() => {\n    // getTodos();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <section className=\"todoapp\">\n    //   <header className=\"header\">\n    //     <h1>todos</h1>\n    //     <form \n    //     // onSubmit={createTodo}\n    //     >\n    //       <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n    //     </form>\n    //   </header>\n    //   <section className=\"main\" style={{ display: \"block\" }}>\n    //     <ul className=\"todo-list\">\n    //       {todos.map(todo => {\n    //         return (\n    //           <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n    //             <div className=\"view\">\n    //               {/* <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} /> */}\n    //               {/* <label>{todo.name}</label> */}\n    //               {/* <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button> */}\n    //             </div>\n    //           </li>\n    //         );\n    //       })}\n    //     </ul>\n    //   </section>\n    // </section >\n    _jsxDEV(\"h1\", {\n      children: \"fghjkl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"GJV7m7gNoZmXOQ49S2kx79/RCYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","service","jsxDEV","_jsxDEV","App","_s","newTodo","setNewTodo","todos","setTodos","getTodos","getTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/p3/ToDoListReact-master/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport service from './service.js';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  // async function createTodo(e) {\n  //   e.preventDefault();\n  //   await service.addTask(newTodo);\n  //   setNewTodo(\"\");//clear input\n  //   await getTodos();//refresh tasks list (in order to see the new one)\n  // }\n\n  // async function updateCompleted(todo, isComplete) {\n  //   await service.setCompleted(todo.id, isComplete);\n  //   await getTodos();//refresh tasks list (in order to see the updated one)\n  // }\n\n  // async function deleteTodo(id) {\n  //   await service.deleteTask(id);\n  //   await getTodos();//refresh tasks list\n  // }\n\n  useEffect(() => {\n    // getTodos();\n  }, []);\n\n  return (\n    // <section className=\"todoapp\">\n    //   <header className=\"header\">\n    //     <h1>todos</h1>\n    //     <form \n    //     // onSubmit={createTodo}\n    //     >\n    //       <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n    //     </form>\n    //   </header>\n    //   <section className=\"main\" style={{ display: \"block\" }}>\n    //     <ul className=\"todo-list\">\n    //       {todos.map(todo => {\n    //         return (\n    //           <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n    //             <div className=\"view\">\n    //               {/* <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} /> */}\n    //               {/* <label>{todo.name}</label> */}\n    //               {/* <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button> */}\n    //             </div>\n    //           </li>\n    //         );\n    //       })}\n    //     </ul>\n    //   </section>\n    // </section >\n    <h1>fghjkl</h1>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,eAAeU,QAAQA,CAAA,EAAG;IACxB,MAAMF,KAAK,GAAG,MAAMP,OAAO,CAACU,QAAQ,CAAC,CAAC;IACtCF,QAAQ,CAACD,KAAK,CAAC;EACjB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEAT,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAI,OAAA;MAAAS,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAEnB;AAACX,EAAA,CA1DQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}